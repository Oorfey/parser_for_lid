from flask import Flask, request, jsonify
import requests
from bs4 import BeautifulSoup
import re

app = Flask(__name__)

@app.route('/parse_vk', methods=['POST'])
def parse_vk():
    data = request.get_json()
    url = data.get('url')
    if not url:
        return jsonify({'error': 'URL –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω'}), 400

    # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è URL
    url_clean = re.sub(r'^https?://', '', url)
    url_clean = re.sub(r'^www\.', '', url_clean)

    # –ü—Ä–æ–±—É–µ–º –æ—Ç–∫—Ä—ã—Ç—å URL (—Å–Ω–∞—á–∞–ª–∞ http, –ø–æ—Ç–æ–º https)
    full_url = 'http://' + url_clean
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) '
                      'AppleWebKit/537.36 (KHTML, like Gecko) '
                      'Chrome/117.0.0.0 Safari/537.36'
    }

    try:
        page = requests.get(full_url, headers=headers, timeout=15)
        page.raise_for_status()
    except requests.RequestException:
        full_url = 'https://' + url_clean
        try:
            page = requests.get(full_url, headers=headers, timeout=15)
            page.raise_for_status()
        except requests.RequestException as e:
            return jsonify({'error': f'–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–∞–π—Ç—É: {str(e)}'}), 400

    # –ü–∞—Ä—Å–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
    soup = BeautifulSoup(page.content, "html.parser")

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    title = soup.find('title')
    title_text = title.text.strip() if title else '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω'

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    text = soup.get_text(separator='\n')

    # –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ email-–∞–¥—Ä–µ—Å–æ–≤
    email_pattern = re.compile(r'[\w\.-]+@[\w\.-]+\.\w+')
    emails = list(set(email_pattern.findall(text)))  # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã

    # üî• **–ù–æ–≤–æ–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤**
    phone_pattern = re.compile(
        r'(?:\+?7|8)?[\s\-]?\(?\d{3}\)?[\s\-]?\d{3}[\s\-]?\d{2}[\s\-]?\d{2}'
    )
    phone_numbers = list(set(phone_pattern.findall(text)))  # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã

    # üî• **–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –Ω–æ–º–µ—Ä–æ–≤ –æ—Ç —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª**
    filtered_phone_numbers = []
    for num in phone_numbers:
        num = num.replace(' ', '').replace('-', '').replace('(', '').replace(')', '')
        if len(num) >= 10:  # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –Ω–æ–º–µ—Ä –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π
            filtered_phone_numbers.append(num)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    result = {
        'title': title_text,
        'url': url_clean,
        'phone_numbers': filtered_phone_numbers,
        'emails': emails
    }

    return jsonify(result), 200

if __name__ == '__main__':
    app.run(debug=True)
